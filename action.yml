name: "Dev Agent"
description: "AutoGen-based multi-agent system for automated test fixing"
author: "rhythmatician"

branding:
  icon: "terminal"
  color: "blue"

inputs:
  config:
    description: "Path to dev-agent configuration file"
    required: false
    default: "dev-agent.yaml"
  test-command:
    description: "Test command to run (e.g., pytest, npm test)"
    required: false
    default: "pytest --maxfail=1"
  max-iterations:
    description: "Maximum number of fix iterations to attempt"
    required: false
    default: "5"
  model-path:
    description: "Path to local LLM model (format: backend:path/to/model.gguf)"
    required: false
    default: "llama-cpp:models/codellama.gguf"
  auto-pr:
    description: "Automatically create pull request for fixes"
    required: false
    default: "true"
  git-branch-prefix:
    description: "Prefix for automated fix branches"
    required: false
    default: "dev-agent/fix"

outputs:
  success:
    description: "Whether dev-agent successfully fixed all tests"
    value: ${{ steps.run-dev-agent.outputs.success }}
  iterations-used:
    description: "Number of iterations used to fix tests"
    value: ${{ steps.run-dev-agent.outputs.iterations-used }}
  branch-created:
    description: "Name of the git branch created for fixes"
    value: ${{ steps.run-dev-agent.outputs.branch-created }}
  pr-url:
    description: "URL of created pull request (if auto-pr enabled)"
    value: ${{ steps.run-dev-agent.outputs.pr-url }}

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dev-agent dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -r ${{ github.action_path }}/requirements.txt
        pip install -r ${{ github.action_path }}/requirements-dev.txt
        pip install -e ${{ github.action_path }}

    - name: Configure git
      shell: bash
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "Dev Agent"

    - name: Create dev-agent config if not exists
      shell: bash
      run: |
        if [ ! -f "${{ inputs.config }}" ]; then
          cat > "${{ inputs.config }}" << EOF
        max_iterations: ${{ inputs.max-iterations }}
        test_command: "${{ inputs.test-command }}"
        git:
          branch_prefix: "${{ inputs.git-branch-prefix }}"
          remote: "origin"
          auto_pr: ${{ inputs.auto-pr }}
        llm:
          model_path: "${{ inputs.model-path }}"
        metrics:
          enabled: true
          storage_path: null
        EOF
        fi

    - name: Run dev-agent
      id: run-dev-agent
      shell: bash
      run: |
        echo "Starting Dev Agent with configuration:"
        cat "${{ inputs.config }}"

        if python -m dev_agent; then
          echo "success=true" >> $GITHUB_OUTPUT
          echo "Dev Agent completed successfully"
        else
          exit_code=$?
          echo "success=false" >> $GITHUB_OUTPUT
          echo "Dev Agent failed with exit code: $exit_code"
          exit $exit_code
        fi
